syntax = "proto3";

package kyve.bundles.v1beta1;

// this line is used by starport scaffolding # proto/tx/import
import "gogoproto/gogo.proto";

option go_package = "github.com/KYVENetwork/chain/x/bundles/types";

// Msg defines the Msg service.
service Msg {
  // this line is used by starport scaffolding # proto/tx/rpc
  // SubmitBundleProposal ...
  rpc SubmitBundleProposal(MsgSubmitBundleProposal) returns (MsgSubmitBundleProposalResponse);
  // VoteBundleProposal ...
  rpc VoteBundleProposal(MsgVoteBundleProposal) returns (MsgVoteBundleProposalResponse);
  // ClaimUploaderRole ...
  rpc ClaimUploaderRole(MsgClaimUploaderRole) returns (MsgClaimUploaderRoleResponse);
  // SkipUploaderRole ...
  rpc SkipUploaderRole(MsgSkipUploaderRole) returns (MsgSkipUploaderRoleResponse);
}

// MsgSubmitBundleProposal defines a SDK message for submitting a bundle proposal.
message MsgSubmitBundleProposal {
  // creator ...
  string creator = 1;
  // staker ...
  string staker = 2;
  // pool_id ...
  uint64 pool_id = 3;
  // storage_id ...
  string storage_id = 4;
  // byte_size ...
  uint64 byte_size = 5;
  // from_height
  uint64 from_height = 6;
  // to_height ...
  uint64 to_height = 7;
  // from_key
  string from_key = 8;
  // to_key ...
  string to_key = 9;
  // to_value ...
  string to_value = 10;
  // bundle_hash ...
  string bundle_hash = 11;
}

// MsgSubmitBundleProposalResponse defines the Msg/SubmitBundleProposal response type.
message MsgSubmitBundleProposalResponse {}

// VoteType ...
enum VoteType {
  option (gogoproto.goproto_enum_prefix) = false;

  // VOTE_TYPE_UNSPECIFIED ...
  VOTE_TYPE_UNSPECIFIED = 0;
  // VOTE_TYPE_YES ...
  VOTE_TYPE_YES = 1;
  // VOTE_TYPE_NO ...
  VOTE_TYPE_NO = 2;
  // VOTE_TYPE_ABSTAIN ...
  VOTE_TYPE_ABSTAIN = 3;
}

// MsgVoteBundleProposal defines a SDK message for voting on a bundle proposal.
message MsgVoteBundleProposal {
  // creator ...
  string creator = 1;
  // staker ...
  string staker = 2;
  // id ...
  uint64 pool_id = 3;
  // storage_id ...
  string storage_id = 4;
  // vote ...
  VoteType vote = 5;
}

// MsgVoteBundleProposalResponse defines the Msg/VoteBundleProposal response type.
message MsgVoteBundleProposalResponse {}

// MsgClaimUploaderRole defines a SDK message for claiming the uploader role.
message MsgClaimUploaderRole {
  // creator ...
  string creator = 1;
  // staker ...
  string staker = 2;
  // id ...
  uint64 pool_id = 3;
}

// MsgClaimUploaderRoleResponse defines the Msg/ClaimUploaderRole response type.
message MsgClaimUploaderRoleResponse {}

// MsgSubmitBundleProposal defines a SDK message for submitting a bundle proposal.
message MsgSkipUploaderRole {
  // creator ...
  string creator = 1;
  // staker ...
  string staker = 2;
  // pool_id ...
  uint64 pool_id = 3;
  // from_height ...
  uint64 from_height = 4;
}

// MsgSubmitBundleProposalResponse defines the Msg/SubmitBundleProposal response type.
message MsgSkipUploaderRoleResponse {}
